SET DATABASE UNIQUE NAME HSQLDB54AC0A4070
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET FILES WRITE DELAY 500 MILLIS
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 32
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
ALTER USER SA SET LOCAL TRUE
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
SET SCHEMA PUBLIC
CREATE MEMORY TABLE PUBLIC.USER(ID INTEGER NOT NULL PRIMARY KEY,PASSWORD VARCHAR(100) NOT NULL,NAME VARCHAR(100) NOT NULL,FAMILY VARCHAR(100) NOT NULL,EMAIL VARCHAR(100) NOT NULL,BALANCE INTEGER NOT NULL)
CREATE MEMORY TABLE PUBLIC.USER_ROLE(ID INTEGER NOT NULL,ROLE VARCHAR(20) NOT NULL,PRIMARY KEY(ID,ROLE),FOREIGN KEY(ID) REFERENCES PUBLIC.USER(ID))
CREATE MEMORY TABLE PUBLIC.STOCK(ID VARCHAR(20) NOT NULL PRIMARY KEY,OWNER_ID INTEGER NOT NULL,FOREIGN KEY(OWNER_ID) REFERENCES PUBLIC.USER(ID))
CREATE MEMORY TABLE PUBLIC.PENDING_STOCK(ID VARCHAR(20) NOT NULL PRIMARY KEY,OWNER_ID INTEGER NOT NULL,QUANTITY INTEGER NOT NULL,PRICE INTEGER NOT NULL,REQUEST_TYPE VARCHAR(4) NOT NULL,FOREIGN KEY(OWNER_ID) REFERENCES PUBLIC.USER(ID))
CREATE MEMORY TABLE PUBLIC.SHARE(STOCK_ID VARCHAR(20) NOT NULL,USER_ID INTEGER NOT NULL,QUANTITY INTEGER NOT NULL,PRIMARY KEY(STOCK_ID,USER_ID),FOREIGN KEY(STOCK_ID) REFERENCES PUBLIC.STOCK(ID),FOREIGN KEY(USER_ID) REFERENCES PUBLIC.USER(ID))
CREATE MEMORY TABLE PUBLIC.REQUEST(ID INTEGER NOT NULL PRIMARY KEY,STOCK_ID VARCHAR(20) NOT NULL,USER_ID INTEGER NOT NULL,QUANTITY INTEGER NOT NULL,PRICE INTEGER NOT NULL,REQUEST_TYPE VARCHAR(4) NOT NULL,OP_TYPE VARCHAR(3) NOT NULL,FOREIGN KEY(STOCK_ID) REFERENCES PUBLIC.STOCK(ID),FOREIGN KEY(USER_ID) REFERENCES PUBLIC.USER(ID))
CREATE MEMORY TABLE PUBLIC.EXPENSIVE_REQUEST(ID INTEGER NOT NULL PRIMARY KEY,STOCK_ID VARCHAR(20) NOT NULL,USER_ID INTEGER NOT NULL,QUANTITY INTEGER NOT NULL,PRICE INTEGER NOT NULL,REQUEST_TYPE VARCHAR(4) NOT NULL,OP_TYPE VARCHAR(3) NOT NULL,FOREIGN KEY(STOCK_ID) REFERENCES PUBLIC.STOCK(ID),FOREIGN KEY(USER_ID) REFERENCES PUBLIC.USER(ID))
CREATE MEMORY TABLE PUBLIC.RECORD(ID INTEGER NOT NULL PRIMARY KEY,STOCK_ID VARCHAR(20) NOT NULL,SELLER_ID INTEGER NOT NULL,BUYER_ID INTEGER NOT NULL,QUANTITY INTEGER NOT NULL,PRICE INTEGER NOT NULL,SELLER_BALANCE INTEGER NOT NULL,BUYER_BALANCE INTEGER NOT NULL,OP_TYPE VARCHAR(3) NOT NULL,REG_DATE TIMESTAMP NOT NULL,FOREIGN KEY(STOCK_ID) REFERENCES PUBLIC.STOCK(ID),FOREIGN KEY(SELLER_ID) REFERENCES PUBLIC.USER(ID),FOREIGN KEY(BUYER_ID) REFERENCES PUBLIC.USER(ID))
CREATE MEMORY TABLE PUBLIC.DEPOSIT_REQ(ID INTEGER NOT NULL PRIMARY KEY,USER_ID INTEGER NOT NULL,AMOUNT INTEGER NOT NULL,FOREIGN KEY(USER_ID) REFERENCES PUBLIC.USER(ID))
CREATE MEMORY TABLE PUBLIC.CONFIG(NAME VARCHAR(20) NOT NULL PRIMARY KEY,VALUE VARCHAR(20) NOT NULL)
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
SET SCHEMA PUBLIC
INSERT INTO USER VALUES(1,'admin','admin','adminy','damaroo.con',0)
INSERT INTO USER_ROLE VALUES(1,'admin')
